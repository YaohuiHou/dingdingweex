{"version":3,"sources":["../../src/dingtalk-log/index.js"],"names":["LOG","INFO","WARNING","ERROR","LogType","fillZore","str","res","substring","length","logChannel","logData","time","getHours","getMinutes","getSeconds","type","log","logArr","info","error","warn","setLog","fn","Date"],"mappings":";;;;;;;;AAAA,IAAMA,MAAM,KAAZ;AACA,IAAMC,OAAO,MAAb;AACA,IAAMC,UAAU,SAAhB;AACA,IAAMC,QAAQ,OAAd;;AAEA,IAAMC,UAAU;AACdJ,UADc;AAEdC,YAFc;AAGdC,kBAHc;AAIdC;AAJc,CAAhB;;AAOA,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,MAAMC,MAAM,OAAOD,GAAnB;AACA,SAAOC,IAAIC,SAAJ,CAAcD,IAAIE,MAAJ,GAAa,CAA3B,CAAP;AACH;;AAED,IAAIC,aAAa,oBAACC,OAAD,EAAa;AAAA;;AAC5B,MAAMC,OAAOP,SAASM,QAAQC,IAAR,CAAaC,QAAb,EAAT,IACP,GADO,GACDR,SAASM,QAAQC,IAAR,CAAaE,UAAb,EAAT,CADC,GAEP,GAFO,GAEDT,SAASM,QAAQC,IAAR,CAAaG,UAAb,EAAT,CAFZ;AAGA,UAAQJ,QAAQK,IAAhB;AACE,SAAKZ,QAAQJ,GAAb;AACI,2BAAQiB,GAAR,kBAAY,UAASL,IAAT,GAAe,UAA3B,4BAA0CD,QAAQO,MAAlD;AACF;AACF,SAAKd,QAAQH,IAAb;AACI,4BAAQkB,IAAR,mBAAa,UAASP,IAAT,GAAgB,WAA7B,4BAA6CD,QAAQO,MAArD;AACF;AACF,SAAKd,QAAQD,KAAb;AACI,4BAAQiB,KAAR,mBAAc,UAASR,IAAT,GAAe,YAA7B,4BAA8CD,QAAQO,MAAtD;AACF;AACF,SAAKd,QAAQF,OAAb;AACI,4BAAQmB,IAAR,mBAAa,UAAST,IAAT,GAAe,cAA5B,4BAA+CD,QAAQO,MAAvD;AACF;AACF;AACE;AAdJ;AAgBD,CApBD;;AAsBA,IAAMI,SAAS,SAATA,MAAS,CAACC,EAAD,EAAQ;AACnBb,eAAaa,EAAb;AACH,CAFD;;AAIA,IAAMN,MAAM,SAANA,GAAM,CAACC,MAAD,EAAgC;AAAA,MAAvBF,IAAuB,uEAAhBZ,QAAQJ,GAAQ;;AAC1CU,aAAW;AACTM,cADS;AAETE,kBAFS;AAGTN,UAAM,IAAIY,IAAJ;AAHG,GAAX;AAKD,CAND;;kBAQe;AACbP,UADa;AAEbK,gBAFa;AAGblB;AAHa,C","file":"index.js","sourcesContent":["const LOG = 'LOG';\nconst INFO = 'INFO';\nconst WARNING = 'WARNING';\nconst ERROR = 'ERROR';\n\nconst LogType = {\n  LOG,\n  INFO,\n  WARNING,\n  ERROR\n}\n\nfunction fillZore(str) {\n    const res = '00' + str;\n    return res.substring(res.length - 2);\n}\n\nlet logChannel = (logData) => {\n  const time = fillZore(logData.time.getHours())\n      + ':' + fillZore(logData.time.getMinutes())\n      + ':' + fillZore(logData.time.getSeconds());\n  switch (logData.type) {\n    case LogType.LOG:\n        console.log('time:'+ time +' | log: ', ...logData.logArr);\n      break;\n    case LogType.INFO:\n        console.info('time:'+ time + ' | info: ', ...logData.logArr);\n      break;\n    case LogType.ERROR:\n        console.error('time:'+ time +' | error: ', ...logData.logArr);\n      break;\n    case LogType.WARNING:\n        console.warn('time:'+ time +' | warning: ', ...logData.logArr);\n      break;\n    default:\n      break;\n  }\n};\n\nconst setLog = (fn) => {\n    logChannel = fn;\n};\n\nconst log = (logArr, type = LogType.LOG) => {\n  logChannel({\n    type,\n    logArr,\n    time: new Date(),\n  });\n};\n\nexport default {\n  log,\n  setLog,\n  LogType\n}\n"]}